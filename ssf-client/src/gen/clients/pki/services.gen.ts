// Copyright (C) 2024 Nicola Dardanis <nicdard@gmail.com>
//
// This program is free software: you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free Software
// Foundation, version 3.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// this program. If not, see <https://www.gnu.org/licenses/>.
//
// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { $OpenApiTs } from './types.gen';

export class CrateService {
  /**
   * Return JSON version of an OpenAPI schema
   * Return JSON version of an OpenAPI schema
   * @returns unknown JSON file
   * @throws ApiError
   */
  public static openapi(): CancelablePromise<
    $OpenApiTs['/api-doc.json']['get']['res'][200]
  > {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/api-doc.json',
    });
  }

  /**
   * Return the CA's credential.
   * Return the CA's credential.
   * @returns GetCredentialResponse CA certificate
   * @throws ApiError
   */
  public static getCaCredential(): CancelablePromise<
    $OpenApiTs['/ca/credential']['get']['res'][200]
  > {
    return __request(OpenAPI, {
      method: 'GET',
      url: '/ca/credential',
    });
  }

  /**
   * Register a new client's public key with the CA.
   * Register a new client's public key with the CA.
   * The client sends a certificate request in PEM format.
   * The CA checks that the email in the certificate request is the same as the email in the register request.
   * @param data The data for the request.
   * @param data.requestBody
   * @returns RegisterResponse Registered client.
   * @throws ApiError
   */
  public static register(
    data: $OpenApiTs['/ca/register']['post']['req']
  ): CancelablePromise<$OpenApiTs['/ca/register']['post']['res'][201]> {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/ca/register',
      body: data.requestBody,
      mediaType: 'application/json',
      errors: {
        400: 'Bad Request',
        409: 'Conflict',
      },
    });
  }

  /**
   * Verify a client's certificate.
   * Verify a client's certificate.
   * The client sends a certificate to be verified in PEM format.
   * @param data The data for the request.
   * @param data.requestBody
   * @returns VerifyResponse Whether the client's certificate is valid or not.
   * @throws ApiError
   */
  public static verify(
    data: $OpenApiTs['/ca/verify']['post']['req']
  ): CancelablePromise<$OpenApiTs['/ca/verify']['post']['res'][200]> {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/ca/verify',
      body: data.requestBody,
      mediaType: 'application/json',
    });
  }

  /**
   * Return the client's credential bound to the email in the request.
   * Return the client's credential bound to the email in the request.
   * @param data The data for the request.
   * @param data.requestBody
   * @returns GetCredentialResponse client certificate
   * @throws ApiError
   */
  public static getCredential(
    data: $OpenApiTs['/credential']['post']['req']
  ): CancelablePromise<$OpenApiTs['/credential']['post']['res'][200]> {
    return __request(OpenAPI, {
      method: 'POST',
      url: '/credential',
      body: data.requestBody,
      mediaType: 'application/json',
      errors: {
        404: 'Not Found',
      },
    });
  }
}
