// This file is auto-generated by @hey-api/openapi-ts

export type CreateUserRequest = {
  /**
   * The email contained in the associated credentials sent through mTLS.
   */
  email: string;
};

export type FolderResponse = {
  etag?: string | null;
  /**
   * The id of the folder.
   */
  id: number;
  metadata_content?: (Blob | File) | null;
  version?: string | null;
};

export type ListFolderResponse = {
  folders: Array<number>;
};

export type ListUsersResponse = {
  /**
   * The emails of the users.
   */
  emails: Array<string>;
};

export type ShareFolderRequest = {
  /**
   * The emails of the users to share the folder with. The id is extracted from the path.
   */
  emails: Array<string>;
};

/**
 * Upload a file to the server.
 */
export type Upload = {
  /**
   * The file to upload.
   */
  file: Blob | File;
  /**
   * The metadata file to upload.
   */
  metadata: Blob | File;
  /**
   * The previous metadata etag to which this file is related.
   */
  parent_etag?: string | null;
  /**
   * The previous metadata version to which this file is related.
   */
  parent_version?: string | null;
};

/**
 * When a file is uploaded successfully, an etag is returned with the latest version of the metadata file of the folder.
 */
export type UploadFileResponse = {
  /**
   * The metadata etag.
   */
  etag?: string | null;
  /**
   * The metadata version.
   */
  version?: string | null;
};

export type $OpenApiTs = {
  '/api-doc.json': {
    get: {
      res: {
        /**
         * Openapi spec of this server
         */
        200: unknown;
      };
    };
  };
  '/folders': {
    get: {
      res: {
        /**
         * List of folders.
         */
        200: ListFolderResponse;
        /**
         * Unkwown or unauthorized user.
         */
        401: unknown;
        /**
         * Internal Server Error, couldn't retrieve the users
         */
        500: unknown;
      };
    };
    post: {
      res: {
        /**
         * New folder created.
         */
        201: FolderResponse;
        /**
         * Unkwown or unauthorized user.
         */
        401: unknown;
        /**
         * Internal Server Error
         */
        500: unknown;
      };
    };
  };
  '/folders/{folder_id}': {
    get: {
      req: {
        /**
         * Folder id.
         */
        folderId: number;
      };
      res: {
        /**
         * The requested folder.
         */
        200: FolderResponse;
        /**
         * Unkwown or unauthorized user.
         */
        401: unknown;
        /**
         * Folder not found.
         */
        404: unknown;
        /**
         * Internal Server Error, couldn't retrieve the users
         */
        500: unknown;
      };
    };
    delete: {
      req: {
        /**
         * The folder id.
         */
        folderId: number;
      };
      res: {
        /**
         * User removed from folder.
         */
        200: unknown;
        /**
         * Unkwown or unauthorized user.
         */
        401: unknown;
        /**
         * Not found.
         */
        404: unknown;
        /**
         * Internal Server Error, couldn't retrieve the users
         */
        500: unknown;
      };
    };
    patch: {
      req: {
        /**
         * Folder id.
         */
        folderId: number;
        requestBody: ShareFolderRequest;
      };
      res: {
        /**
         * Folder shared.
         */
        200: unknown;
        /**
         * Unkwown or unauthorized user.
         */
        401: unknown;
        /**
         * Not found.
         */
        404: unknown;
        /**
         * Internal Server Error, couldn't retrieve the users
         */
        500: unknown;
      };
    };
  };
  '/folders/{folder_id}/files/{file_id}': {
    get: {
      req: {
        /**
         * File identifier.
         */
        fileId: string;
        /**
         * Folder id.
         */
        folderId: number;
      };
      res: {
        /**
         * The requested file.
         */
        200: Blob | File;
        /**
         * Unkwown or unauthorized user.
         */
        401: unknown;
        /**
         * File not found.
         */
        404: unknown;
        /**
         * Internal Server Error, couldn't retrieve the file
         */
        500: unknown;
      };
    };
    post: {
      req: {
        /**
         * File identifier.
         */
        fileId: string;
        /**
         * Folder id.
         */
        folderId: number;
        formData: Upload;
      };
      res: {
        /**
         * File uploaded.
         */
        201: unknown;
        /**
         * Unkwown or unauthorized user.
         */
        401: unknown;
        /**
         * Folder not found.
         */
        404: unknown;
        /**
         * Internal Server Error, couldn't retrieve the file
         */
        500: unknown;
      };
    };
  };
  '/folders/{folder_id}/metadatas': {
    get: {
      req: {
        /**
         * Folder id.
         */
        folderId: number;
      };
      res: {
        /**
         * The requested folder's metadata.
         */
        200: Blob | File;
        /**
         * Unkwown or unauthorized user.
         */
        401: unknown;
        /**
         * File not found.
         */
        404: unknown;
        /**
         * Internal Server Error, couldn't retrieve the file
         */
        500: unknown;
      };
    };
  };
  '/users': {
    get: {
      res: {
        /**
         * List of users using the SSF.
         */
        200: ListUsersResponse;
        /**
         * Unkwown or unauthorized user.
         */
        401: unknown;
        /**
         * Internal Server Error, couldn't retrieve the users
         */
        500: unknown;
      };
    };
    post: {
      req: {
        requestBody: CreateUserRequest;
      };
      res: {
        /**
         * New account created.
         */
        201: unknown;
        /**
         * Bad request.
         */
        400: unknown;
        /**
         * Unauthorized user, please, set a valid client credential.
         */
        401: unknown;
        /**
         * Conflict.
         */
        409: unknown;
      };
    };
  };
};
