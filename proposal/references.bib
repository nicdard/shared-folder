@inproceedings{pkwpreprint,
	title = {Puncturable Key Wrapping and its Applications},
	booktitle = {Asiacrypt 2022},
	author = {Matilda Backendal and Felix G{\"u}nther and Kenneth G.\ Paterson},
	year = {2022},
	publisher = {Springer},
	note = {To appear},
}

@thesis{khalil2022,
	type={Semester Project},
	title={Implementing a Puncturable Key Wrapping Library},
	author={Khalil, Younis},
	year={2022},
	publisher={Department of Computer Science, {ETH} Zurich},
	howpublished={Semester Project, Department of Computer Science, {ETH} Zurich},
}



@misc{Mega,
	title = {Mega},
	howpublished = {\url{https://mega.io/security}, \url{https://mega.nz/SecurityWhitepaper.pdf}, \url{https://mega.io/sourcecode}},
	note = {Accessed: 2021-06-11}
}

@misc{Icedrive,
	title = {Icedrive},
	howpublished = {\url{https://icedrive.net/encrypted-cloud-storage}},
	note = {Accessed: 2021-06-11}
}

@misc{Sync,
	title = {Sync},
	howpublished = {\url{https://www.sync.com/pdf/sync-privacy-whitepaper.pdf}},
	note = {Accessed: 2021-06-11}
}

@misc{pCloud,
	title = {pCloud},
	howpublished = {\url{https://www.pcloud.com/features/crypto.html}},
	note = {Accessed: 2021-06-11}
}

@misc{Tresorit,
	title = {Tresorit},
	howpublished = {\url{https://tresorit.com/files/tresoritwhitepaper.pdf}},
	note = {Accessed: 2021-09-06}
}

@misc{Nextcloud,
	title = {Nextcloud},
	howpublished = {\url{https://nextcloud.com/media/wp135098u/Server-side- Encryption-Whitepaper-WebVersion-072018.pdf}},
	note = {Accessed: 2021-09-06}
}

@misc{rfc9420,
    series =    {Request for Comments},
    number =    9420,
    howpublished =  {RFC 9420},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC9420},
    url =       {https://www.rfc-editor.org/info/rfc9420},
    author =    {Richard Barnes and Benjamin Beurdouche and Raphael Robert and Jon Millican and Emad Omara and Katriel Cohn-Gordon},
    title =     {The Messaging Layer Security (MLS) Protocol},
    pagetotal = 132,
    year =      2023,
    month =     jul,
    abstract =  {Messaging applications are increasingly making use of end-to-end security mechanisms to ensure that messages are only accessible to the communicating endpoints, and not to any servers involved in delivering messages. Establishing keys to provide such protections is challenging for group chat settings, in which more than two clients need to agree on a key but may not be online at the same time. In this document, we specify a key establishment protocol that provides efficient asynchronous group key establishment with forward secrecy (FS) and post-compromise security (PCS) for groups in size ranging from two to thousands.},
}

@book{norman2002design,
  abstract = {First, businesses discovered quality as a key competitive edge; next came service. This title reveals how smart design is the next competitive frontier. 'The Design of Everyday Things' is a primer on how and why some products satisfy customers while others only frustrate them.},
  added-at = {2012-09-28T16:01:03.000+0200},
  address = {[New York]},
  author = {Norman, Donald A.},
  biburl = {https://www.bibsonomy.org/bibtex/2e51bef4e8b0c0ea3c13e8b5e6a561bed/schmidt2},
  description = {The Design of Everyday Things: Amazon.de: Don Norman: Englische Bücher},
  interhash = {c6fd1560a6892285580779b96140f88c},
  intrahash = {e51bef4e8b0c0ea3c13e8b5e6a561bed},
  isbn = {0465067107 9780465067107},
  keywords = {books design lang:en product_design toread ui usability ux},
  publisher = {Basic Books},
  refid = {215302602},
  timestamp = {2012-09-28T16:01:03.000+0200},
  title = {The design of everyday things},
  url = {http://www.amazon.de/The-Design-Everyday-Things-Norman/dp/0465067107/ref=wl_it_dp_o_pC_S_nC?ie=UTF8&colid=151193SNGKJT9&coliid=I262V9ZRW8HR2C},
  year = 2002
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Not yet in cryptobib
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@inproceedings{USENIX:BalColVau23,
    author = {David Balb{\'a}s and Daniel Collins and Serge Vaudenay},
    title = {Cryptographic Administration for Secure Group Messaging},
    booktitle = {32nd USENIX Security Symposium (USENIX Security 23)},
    year = {2023},
    isbn = {978-1-939133-37-3},
    address = {Anaheim, CA},
    pages = {1253--1270},
    url = {https://www.usenix.org/conference/usenixsecurity23/presentation/balbas},
    publisher = {USENIX Association},
    month = aug
}

@InProceedings{C:AlwMulTse23,
author="Alwen, Jo{\"e}l
and Mularczyk, Marta
and Tselekounis, Yiannis",
editor="Handschuh, Helena
and Lysyanskaya, Anna",
title="Fork-Resilient Continuous Group Key Agreement",
booktitle="Advances in Cryptology -- CRYPTO 2023",
year="2023",
publisher="Springer Nature Switzerland",
address="Cham",
pages="396--429",
abstract="Continuous Group Key Agreement (CGKA) lets an evolving group of clients agree on a sequence of group keys. An important application of CGKA is scalable end-to-end (E2E) encrypted group messaging. A major problem preventing the use of CGKA over unreliable infrastructure are so-called forks. A fork occurs when group members have diverging views of the group's history (and thus its current state); e.g. due to network or server failures. Once communication channels are restored, members resolve a fork by agreeing on the state of the group again. Today's CGKA protocols make fork resolution challenging, as natural resolution strategies seem to conflict with the way the protocols enforce group state agreement and forward secrecy. Meanwhile, secure group messaging protocols which do support fork resolution do not scale nearly as well as CGKA does.",
isbn="978-3-031-38551-3"
}

@InProceedings{AC:BalColGaj23,
author="Balb{\'a}s, David
and Collins, Daniel
and Gajland, Phillip",
editor="Guo, Jian
and Steinfeld, Ron",
title="WhatsUpp with Sender Keys? Analysis, Improvements and Security Proofs",
booktitle="Advances in Cryptology -- ASIACRYPT 2023",
year="2023",
publisher="Springer Nature Singapore",
address="Singapore",
pages="307--341",
abstract="Developing end-to-end encrypted instant messaging solutions for group conversations is an ongoing challenge that has garnered significant attention from practitioners and the cryptographic community alike. Notably, industry-leading messaging apps such as WhatsApp and Signal Messenger have adopted the Sender Keys protocol, where each group member shares their own symmetric encryption key with others Despite its widespread adoption, Sender Keys has never been formally modelled in the cryptographic literature, raising the following natural question:",
isbn="978-981-99-8733-7"
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Never in cryptobib
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@inproceedings{IWSPA:KEONO23,
author = {Kajita, Kaisei and Emura, Keita and Ogawa, Kazuto and Nojima, Ryo and Ohtake, Go},
title = {Continuous Group Key Agreement with Flexible Authorization and Its Applications},
year = {2023},
isbn = {9798400700996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3579987.3586570},
doi = {10.1145/3579987.3586570},
abstract = {Secure messaging (SM) protocols allow users to communicate se-curely over an untrusted infrastructure. Alwen et al. formally de-fined the key agreement protocol used in secure group messaging (SGM) as continuous group key agreement (CGKA) at CRYPTO 2020. In their CGKA protocol, all of the group members have the same rights and a trusted third party is needed. On the other hand, some SGM applications may have a user in the group who has the role of an administrator. When the administrator as the group manager (GM) is distinguished from other group members, i.e., in a one-to-many setting, it would be better for the GM and the other group members to have different authorities. We achieve this flex-ible authorization by incorporating a ratcheting digital signature scheme (Cremers et al. at USENIX Security 2021) into the existing CGKA protocol and demonstrate that such a simple modification allows us to provide flexible authorization. In Alwen et al.'s CGKA protocol, an external public key infrastructure (PKI) functionality as a trusted third party manages the confidential information of users, and the PKI can read all messages until all users update their own keys. In contrast, the GM in our protocol has the same role as the PKI functionality in the group, so no third party outside the group handles confidential information of users and thus no one except group members can read messages regardless of key updates. Our proposed protocol is useful in the creation of new applications such as broadcasting services.},
booktitle = {Proceedings of the 9th ACM International Workshop on Security and Privacy Analytics},
pages = {3–13},
numpages = {11},
keywords = {continuous group key agreement, ratcheting digital signature, secure group messaging},
location = {Charlotte, NC, USA},
series = {IWSPA '23}
}


@misc{MLSWGimpl,
    title = {List of existing MLS implementations},
    howpublished = {\url{https://github.com/mlswg/mls-implementations/blob/main/implementation_list.md}},
    note = {Accessed: 2024-03-06}
}

@misc{AWSMLSrs,
    title = {AWSLabs, mls-rs},
    howpublished = {\url{https://docs.rs/mls-rs/0.38.0/mls_rs/index.html}},
    note = {Accessed: 2024-03-06}
}

@misc{MLSInsider,
      author = {Joël Alwen and Daniel Jost and Marta Mularczyk},
      title = {On The Insider Security of MLS},
      howpublished = {Cryptology ePrint Archive, Paper 2020/1327},
      year = {2020},
      note = {\url{https://eprint.iacr.org/2020/1327}},
      url = {https://eprint.iacr.org/2020/1327}
}

@misc{CGKATreeKEM,
      author = {Joël Alwen and Margarita Capretto and Miguel Cueto and Chethan Kamath and Karen Klein and Ilia Markov and Guillermo Pascual-Perez and Krzysztof Pietrzak and Michael Walter and Michelle Yeo},
      title = {Keep the Dirt: Tainted TreeKEM, Adaptively and Actively Secure Continuous Group Key Agreement},
      howpublished = {Cryptology ePrint Archive, Paper 2019/1489},
      year = {2019},
      note = {\url{https://eprint.iacr.org/2019/1489}},
      url = {https://eprint.iacr.org/2019/1489}
}

@techreport{TreeKEM,
  TITLE = {{TreeKEM: Asynchronous Decentralized Key Management for Large Dynamic Groups A protocol proposal for Messaging Layer Security (MLS)}},
  AUTHOR = {Bhargavan, Karthikeyan and Barnes, Richard and Rescorla, Eric},
  URL = {https://inria.hal.science/hal-02425247},
  TYPE = {Research Report},
  INSTITUTION = {{Inria Paris}},
  YEAR = {2018},
  MONTH = May,
  HAL_ID = {hal-02425247},
  HAL_VERSION = {v1},
}

@misc{TreeKEMimpl,
    title = {{bifurcation/TreeKEM}},
    howpublished = {\url{https://github.com/bifurcation/treekem}},
    note = {Accessed: 2024-03-06}
}

